<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="comments">

    <!-- 댓글 작성 -->
    <insert id="insertComment" parameterType="com.spring.app.comment.domain.CommentDTO">
    insert into comments (
        commentNo, 
        fk_boardNo, 
        fk_id, 
        fk_name, 
        content, 
        createdAtComment,
        parentNo
    )
    values (
        comment_seq.NEXTVAL,
        #{fk_boardNo, jdbcType=NUMERIC},
        #{fk_id},
        #{fk_name},
        #{content},
        SYSDATE,
        #{parentNo}
    )
	</insert>

    <!-- 댓글 목록 조회 -->
    <select id="getCommentsByBoardNo" parameterType="long"
        resultType="com.spring.app.comment.domain.CommentDTO">
    select commentNo, 
	        fk_boardNo, 
	        fk_id, 
	        fk_name, 
	        content, 
	        createdAtComment,
	        parentNo
    from comments
    where fk_boardNo = #{fk_boardNo, jdbcType=NUMERIC}
    order by 
        case when parentNo is null then commentNo else parentNo end ,
        case when parentNo is null then 0 else commentNo end 
	</select>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="map">
        delete from comments
        where commentNo = #{commentNo}
        or parentNo = #{commentNo}
    </delete>


   
   <!-- 대댓글 작성 -->
	<insert id="insertReply" parameterType="map">
	    insert into comments (
	        commentNo,
	        fk_boardNo,
	        fk_id,
	        content,
	        parentNo,
	        createdAtComment
	    ) VALUES (
	        comment_seq.nextval,
	        #{fk_boardNo},
	        #{fk_id},
	        #{content},
	        #{parentNo},
	        SYSDATE
	    )
	</insert>
	   
	<!-- 대댓글 삭제 -->
	<delete id="deleteReply" parameterType="map">
	    delete from comment
	    where commentNo = #{commentNo}
	      and fk_id = #{fk_id}
	</delete>
		
		
		
</mapper>